# TODO: documentation and comments

# This is the datset dir, ie, the place where Knetminer puts all configuration and data by default.
# This is also the host place where the Docker container usually maps its internal dataset dir, by
# means of a volume. 
# 
# By default, this has one of this values:
# - if the directory where this top-level config file is named /config, then datasetDir is
#   dir(<config-file>)/..
# - else, it is dir(<config-file>)
#  
# Most of paths below are relative to this directory.
# Additionally, the variables ${mydir} and ${me} for the directory of this config file and the path of 
# the file itself.
#
# datasetDir: /alt/path/to/dataset

#dataDir: # <datasetDir>/data as default
#oxl: # <datasetDir>/data/knowledge-network.oxl
 
# If this is non-empty, the genes used to seed the initial semantic motif graph traverser are taken from this
# file. Its format is very simple, see the example mentioned here.
# 
# By default (ie, when this parameter is undefined), all genes from dataset/species (see below) are used as
# seed genes.
#
# WARNING: usually gene accessions are stored in upper case in a Knetminer, hence here you must use upper case
# identifiers in order to match the data.
# 
#seedGenesFile: config/seed-genes-example.tsv

# Used to add the number of publications one wants visibly exported in the KnetMiner instance.
# If not defined default is set at 20.
#
defaultExportedPublicationCount: 100

knetSpaceURL: https://knetminer.com/beta/knetspace

# Details about the datset and supported species. Each dataset has its own species to mention here
# 
dataset:
#  id: aratiny
#  title: Aratiny dataset
  organization: Rothamsted Research
#  # sampleQueries: config/sample-queries.xml # this is a default
#  # backgroundImage: config/background.jpg # this is the default 
#  
# TODO: we had this in the old config, but not used anywhere:
#   appKeywords, appDescription

#  species:
#  - taxId: 3702
#    scientificName: Arabidopsis Thaliana
#    commonName: Thale cress
#    # chromosomeBaseMap: config/species/base-map-3702.xml # this is the default
#  - taxId: 4565
#    scientificName: Triticum aestivum
#    commonName: Bread Wheat
#  - taxId: 4577
#    scientificName: Zea mays
#    commonName: Maize



# Options for the traverser are managed in this subsection and they can't be validated, so be 
# careful with typos and alike
graphTraverser:
  # When empty, it takes the state machine traverser (net.sourceforge.ondex.algorithm.graphquery.GraphTraverser)
  GraphTraverserClass: ""
  # ${me} is the absolute path of this hereby file
  # ${mydir} is the absolute path of its directory
  # Many paths are auto-resolved (eg, sampleQueries, above), but some need an explicit
  # specification, since the configuration component isn't aware they are properties about paths
  # (since it passes the values downstream)
  StateMachineFilePath: "file:///${mydir}/SemanticMotifs.txt"
  "knetminer.backend.configPath": "${mydir}/neo4j/config.xml"

# Credentials for Google Analytics, which tracks various requests and events of a Knetminer instance
# If this section isn't defined, no tracking happens.
# 
googleAnalyticsAPI:
  # If you still have an old (UA-) property, YOU NEED to convert it into a GA4
  # (if not already done by Google) and then use its measurement ID here.
  #
  # This is the config for: Knetminer -> "KnetMiner-API - GA4" (details in data streams)
  # WARNING: DO NOT CHANGE THE CREDENTIALS BELOW WITHOUT CHANGING THE COMMENT ABOVE
  measurementId: G-YX04MPYHBG
  # You do need to setup one for the API, which uses the GA4 measurement protocol.
  # This is in Data Streams -> Measurement Protocol -> API Secrets
  # See here: https://wiki.resolution.de/doc/gafcc/latest/configure-the-measurement-api-secret
  apiSecret: WplJN-diT-a3I0z5wOlrAQ
  # This is an ID of the client that sends tracking info. Typically, i's is 
  # a UUID, but it's arbitrary.
  # If not set, the {@link DatasetInfo#getId() dataset ID} is
  # used. The Unix command uuidgen can be uses to generate it.
  #clientId: 40cdb6ea-e542-4160-a7da-641f6c150d58

# If you want, you can separate the GA credentials used for the API from those used for
# the UI. We don't recommend it and if this is left null, it will use the 
# {@link #getGoogleAnalyticsApiConfig() API credentials}.
# 
# WARNING: this imply that you need to omit BOTH this and the API credentials if you want to 
# disable GA completely. We DO NOT support the setting where the API tracking is enabled and
# the client tracking is not.
# 
# Moreover, the only param that is exposed to the UI is 
# {@link GoogleAnalyticsConfiguration#getMeasurementId()}, since that's the only one 
# that the Google-provided Js library gtag needs.
# 
# This also implies that you can omit API secret and measurement ID from the client 
# configuration.
googleAnalyticsClient:
  # This is the config for Knetminer -> "KnetMiner-Web - GA4"
  # WARNING: DO NOT CHANGE THE CREDENTIALS BELOW WITHOUT CHANGING THE COMMENT ABOVE
  measurementId: G-YR7BJVWTNX
  # As said above, it's not used.
  # clientId: 75507276-c9d5-48ba-bc14-ed7f9cc53698

# MB: these are my personal credentials, which I sometimes use for tests
#googleAnalyticsAPI:
#  measurementId: G-31YFKXKSYH
#  apiSecret: c9TGJqIBSVuKB1CoRcZ90Q
#  clientId: 40cdb6ea-e542-4160-a7da-641f6c150d58
#googleAnalyticsClient:
#  measurementId: G-31YFKXKSYH
#  clientId: 75507276-c9d5-48ba-bc14-ed7f9cc53698


# TODO: remove, temporarily keeping it to easily remember the old IDs.
#
# The ID for enabling Google Analytics, to track the requests to a Knetminer instance via Google Analytics
# The default for this is the ID that the Knetminer team uses, but you can use your own ID and get your  
# instance tracked. If this isn't defined (ie, set to null), then GA is disabled.
# googleAnalyticsIdApi: UA-88753233-2
#
# We used to have two different trackers, but this isn't very much needed and these two values could be
# the same. As above, if this is null, no tracking happens (and no Google code is downloaded). 
# googleAnalyticsIdClient: UA-88753233-1
# New GA4, my (MB) test key
# googleAnalyticsIdClient: G-31YFKXKSYH
#
# UA- are the old (universal) API, which is set to be turned off by July 2023 (TODO: migrate)
# G- are for the new GA4, but they don't work with the Java library we're using (both work with the
# Google-provided Js, which appear to be calling the universal API, very confusing).
# Bottom line, we stick to the old API for the time being.
#
# /end: remove

# This enables the CypherDebugger service and corresponding UI interface at TODO.
# It only applies when Neo4j mode is enabled.
# It's normally disabled and enabled for internal test instances.
# It can be enabled via MAVEN_ARGS, see examples in docker-run.sh.
#
# WARNING: THIS allows for completely BREAKING yor Knetminer instance by sending and registering
# arbitrary Cypher queries for the traverser. DO NOT ENABLE in production!!!
# cypherDebuggerEnabled: true

# These are injected into System.getProperties() and made available to other Java components around
# As you can see below, this is used to inject values inside components that use Spring beans
# files (neo4j/config.xml is an example of that).
# 
# They can be overridden from the command line (eg, passing -D to Java, via JAVA_TOOL_OPTIONS)
systemProperties:
  # You could omit this from your configuration, but it's not a good idea
  "knetminer.configDir": "${mydir}"
