# TODO: documentation and comments

# This is the datset dir, ie, the place where Knetminer puts all configuration and data by default.
# This is also the host place where the Docker container usually maps its internal dataset dir, by
# means of a volume. 
# 
# By default, this has one of this values:
# - if the directory where this top-level config file is named /config, then datasetDir is
#   dir(<config-file>)/..
# - else, it is dir(<config-file>)
#  
# Most of paths below are relative to this directory.
# Additionally, the variables ${mydir} and ${me} for the directory of this config file and the path of 
# the file itself.
#
# datasetDir: /alt/path/to/dataset, default is the parent of config/, or where this file is

#dataDir: # <datasetDir>/data as default
#oxl: # <datasetDir>/data/knowledge-network.oxl
 
# If this is non-empty, the genes used to seed the initial semantic motif graph traverser are taken from this
# file. Its format is very simple, see the example mentioned here.
# 
# By default (ie, when this parameter is undefined), all genes from dataset/species (see below) are used as
# seed genes.
#
#seedGenesFile: config/seed-genes-example.tsv

# Used to add the number of publications one wants visibly exported in the KnetMiner instance.
# If not defined default is set at 20.
#
defaultExportedPublicationCount: 100

knetSpaceURL: https://knetminer.com/beta/knetspace

# Details about the datset and supported species. Each dataset has its own species to mention here
# 
dataset:
#  id: aratiny
#  title: Aratiny dataset
  organization: Rothamsted Research
#  # sampleQueries: config/sample-queries.xml # this is a default
#  # backgroundImage: config/background.jpg # this is the default 
#  
#  species:
#  - taxId: 3702
#    scientificName: Arabidopsis Thaliana
#    commonName: Thale cress
#    # chromosomeBaseMap: config/species/base-map-3702.xml # this is the default
#  - taxId: 4565
#    scientificName: Triticum aestivum
#    commonName: Bread Wheat
#  - taxId: 4577
#    scientificName: Zea mays
#    commonName: Maize



# Options for the traverser are managed in this subsection and they can't be validated, so be 
# careful with typos and alike
graphTraverser:
  # When empty, it takes the state machine traverser (net.sourceforge.ondex.algorithm.graphquery.GraphTraverser)
  GraphTraverserClass: ""
  # ${me} is the absolute path of this hereby file
  # ${mydir} is the absolute path of its directory
  # Many paths are auto-resolved (eg, sampleQueries, above), but some need an explicit
  # specification, since the configuration component isn't aware they are properties about paths
  # (since it passes the values downstream)
  StateMachineFilePath: "file:///${mydir}/SemanticMotifs.txt"
  "knetminer.neo4j.configFile": "${mydir}/neo4j/config.xml"

  # This enables the CypherDebugger service and corresponding UI interface at TODO.
  # It only applies when Neo4j mode is enabled.
  # It's normally disabled and enabled for internal test instances.
  # It can be enabled via MAVEN_ARGS, see examples in docker-run.sh.
  #
  # WARNING: THIS allows for completely BREAKING yor Knetminer instance by sending and registering
  # arbitrary Cypher queries for the traverser. DO NOT ENABLE in production!!!
  # "knetminer.backend.cypherDebugger.enabled": true

# These are injected into System.getProperties() and made available to other Java components around
# As you can see below, this is used to inject values inside components that use Spring beans
# files (neo4j/config.xml is an example of that).
# 
# They can be overridden from the command line (eg, passing -D to Java, via JAVA_TOOL_OPTIONS)
systemProperties:
  # You could omit this from your configuration, but it's not a good idea
  "knetminer.configDir": "${mydir}"
